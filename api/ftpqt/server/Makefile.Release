#############################################################################
# Makefile for building: qt_FTP_server
# Generated by qmake (2.01a) (Qt 4.6.2) on: po 12. IV 00:53:24 2010
# Project:  qt_FTP_server.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_DLL -DQT_NO_DEBUG -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_THREAD_SUPPORT
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -O2 -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I'../../../../Qt/2010.02.1/qt/include/QtCore' -I'../../../../Qt/2010.02.1/qt/include/QtNetwork' -I'../../../../Qt/2010.02.1/qt/include' -I'../../../../Qt/2010.02.1/qt/include/ActiveQt' -I'release' -I'../../../../Qt/2010.02.1/qt/mkspecs/win32-g++'
LINK        =        g++
LFLAGS        =        -enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -Wl,-s -Wl,-subsystem,console -mthreads -Wl
LIBS        =        -L'c:/Qt/2010.02.1/qt/lib' -lQtNetwork4 -lQtCore4 
QMAKE         = c:/qt/2010.02.1/qt/bin/qmake.exe
IDC           = c:/Qt/2010.02.1/qt/bin/idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = cp
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = rm
DEL_DIR       = rmdir
MOVE          = mv
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release/

####### Files

SOURCES       = main.cpp \
		../server.cpp \
		servethread.cpp \
		reqqueue.cpp \
		queueitem.cpp \
		acceptionthread.cpp \
		listenthread.cpp release/moc_server.cpp \
		release/moc_listenthread.cpp
OBJECTS       = release/main.o \
		release/server.o \
		release/servethread.o \
		release/reqqueue.o \
		release/queueitem.o \
		release/acceptionthread.o \
		release/listenthread.o \
		release/moc_server.o \
		release/moc_listenthread.o
DIST          = 
QMAKE_TARGET  = qt_FTP_server
DESTDIR        = release/ #avoid trailing-slash linebreak
TARGET         = qt_FTP_server.exe
DESTDIR_TARGET = release/qt_FTP_server.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) $(OBJECTS)  $(LIBS)


qmake:  FORCE
	@$(QMAKE) -spec ../../../../Qt/2010.02.1/qt/mkspecs/win32-g++ -win32 -o Makefile.Release qt_FTP_server.pro

dist:
	$(ZIP) qt_FTP_server.zip $(SOURCES) $(DIST) qt_FTP_server.pro ../../../../Qt/2010.02.1/qt/mkspecs/qconfig.pri ../../../../Qt/2010.02.1/qt/mkspecs/features/qt_functions.prf ../../../../Qt/2010.02.1/qt/mkspecs/features/qt_config.prf ../../../../Qt/2010.02.1/qt/mkspecs/features/exclusive_builds.prf ../../../../Qt/2010.02.1/qt/mkspecs/features/default_pre.prf ../../../../Qt/2010.02.1/qt/mkspecs/features/win32/default_pre.prf ../../../../Qt/2010.02.1/qt/mkspecs/features/release.prf ../../../../Qt/2010.02.1/qt/mkspecs/features/debug_and_release.prf ../../../../Qt/2010.02.1/qt/mkspecs/features/default_post.prf ../../../../Qt/2010.02.1/qt/mkspecs/features/win32/default_post.prf ../../../../Qt/2010.02.1/qt/mkspecs/features/build_pass.prf ../../../../Qt/2010.02.1/qt/mkspecs/features/win32/console.prf ../../../../Qt/2010.02.1/qt/mkspecs/features/win32/rtti.prf ../../../../Qt/2010.02.1/qt/mkspecs/features/win32/exceptions.prf ../../../../Qt/2010.02.1/qt/mkspecs/features/win32/stl.prf ../../../../Qt/2010.02.1/qt/mkspecs/features/shared.prf ../../../../Qt/2010.02.1/qt/mkspecs/features/warn_on.prf ../../../../Qt/2010.02.1/qt/mkspecs/features/qt.prf ../../../../Qt/2010.02.1/qt/mkspecs/features/win32/thread.prf ../../../../Qt/2010.02.1/qt/mkspecs/features/moc.prf ../../../../Qt/2010.02.1/qt/mkspecs/features/resources.prf ../../../../Qt/2010.02.1/qt/mkspecs/features/uic.prf ../../../../Qt/2010.02.1/qt/mkspecs/features/yacc.prf ../../../../Qt/2010.02.1/qt/mkspecs/features/lex.prf ../../../../Qt/2010.02.1/qt/mkspecs/features/include_source_dir.prf  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release/main.o release/server.o release/servethread.o release/reqqueue.o release/queueitem.o release/acceptionthread.o release/listenthread.o release/moc_server.o release/moc_listenthread.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: release/moc_server.cpp release/moc_listenthread.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release/moc_server.cpp release/moc_listenthread.cpp
release/moc_server.cpp: reqqueue.h \
		queueitem.h \
		../server.h
	C:/Qt/2010.02.1/qt/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 ../server.h -o release/moc_server.cpp

release/moc_listenthread.cpp: listenthread.h
	C:/Qt/2010.02.1/qt/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 listenthread.h -o release/moc_listenthread.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 



####### Compile

release/main.o: main.cpp acceptionthread.h \
		queueitem.h \
		reqqueue.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/main.o main.cpp

release/server.o: ../server.cpp ../server.h \
		reqqueue.h \
		queueitem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/server.o ../server.cpp

release/servethread.o: servethread.cpp servethread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/servethread.o servethread.cpp

release/reqqueue.o: reqqueue.cpp reqqueue.h \
		queueitem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/reqqueue.o reqqueue.cpp

release/queueitem.o: queueitem.cpp queueitem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/queueitem.o queueitem.cpp

release/acceptionthread.o: acceptionthread.cpp acceptionthread.h \
		queueitem.h \
		reqqueue.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/acceptionthread.o acceptionthread.cpp

release/listenthread.o: listenthread.cpp listenthread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/listenthread.o listenthread.cpp

release/moc_server.o: release/moc_server.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_server.o release/moc_server.cpp

release/moc_listenthread.o: release/moc_listenthread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_listenthread.o release/moc_listenthread.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

